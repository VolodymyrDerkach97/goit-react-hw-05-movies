{"version":3,"file":"static/js/553.dea04854.chunk.js","mappings":"kTAEaA,EAAqBC,EAAAA,GAAAA,EAAH,gDAGlBC,EAAmBD,EAAAA,GAAAA,GAAH,gD,SCW7B,EAbmB,SAAC,GAAyB,IAAvBE,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5B,OACE,+BACE,UAACF,EAAD,YACE,UAACF,EAAD,YACE,SAAC,MAAD,IADF,KACe,oCAAYG,SAE3B,uBAAIC,QAIX,ECZYC,EAAmBJ,EAAAA,GAAAA,GAAH,mFCKvBK,GAAQC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IA4CnB,EA1Ce,WACb,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAGaC,GACTC,EAAAA,EAAAA,SAAOC,EAAAA,EAAAA,IAAU,YADnBC,QAAWH,QAkBb,OAfAI,EAAAA,EAAAA,YAAU,WACRP,GAAa,GACb,IAAMQ,EAAS,mCAAG,6GAEIC,EAAAA,EAAAA,kBAAsBN,GAF1B,OAERO,EAFQ,OAGdZ,EAAeY,EAAIC,KAAKC,SAHV,gDAKdV,EAAS,KAAMW,SALD,yBAOdb,GAAa,GAPC,4EAAH,qDAUfQ,GACD,GAAE,CAACL,KAGF,2BACGF,GAAQ,SAACP,EAAD,CAAOmB,QAASZ,IAAY,GACpCF,GACC,SAACe,EAAA,EAAD,KAEA,SAACrB,EAAD,UAC0B,IAAvBI,EAAYkB,QACX,uEAEAlB,EAAYmB,KAAI,SAAAC,GAAK,OAAI,SAAC,GAAD,UAA+BA,GAAdA,EAAMC,GAA3B,QAMhC,C","sources":["components/ReviewItem/ReviewItem.styled.js","components/ReviewItem/ReviewItem.jsx","components/Review/Review.styled.js","components/Review/Review.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledReviewAuthor = styled.p`\n  margin-bottom: 15px;\n`;\nexport const StyledReviewItem = styled.li`\n  list-style: inherit;\n`;\n","import PropTypes from 'prop-types';\nimport { TiPencil } from 'react-icons/ti';\nimport { StyledReviewAuthor, StyledReviewItem } from './ReviewItem.styled';\nconst ReviewItem = ({ author, content }) => {\n  return (\n    <>\n      <StyledReviewItem>\n        <StyledReviewAuthor>\n          <TiPencil /> <b>Author: {author}</b>\n        </StyledReviewAuthor>\n        <p>{content}</p>\n      </StyledReviewItem>\n    </>\n  );\n};\n\nexport default ReviewItem;\n\nReviewItem.propTypes = {\n  author: PropTypes.string,\n  content: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const StyledReviewList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n","import { useEffect, useState, useRef, lazy } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../../services';\nimport Loading from '../Loading';\nimport ReviewItem from '../ReviewItem';\nimport { StyledReviewList } from './Review.styled';\n\nconst Error = lazy(() => import('../Error'));\n\nconst Review = () => {\n  const [reviewMovie, setreviewMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const {\n    current: { movieId },\n  } = useRef(useParams('movieId'));\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const res = await api.fetchReviewsMovie(movieId);\n        setreviewMovie(res.data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <div>\n      {error ? <Error message={error} /> : ''}\n      {isLoading ? (\n        <Loading />\n      ) : (\n        <StyledReviewList>\n          {reviewMovie.length === 0 ? (\n            <li>We dont`t have any reviews for this movie.</li>\n          ) : (\n            reviewMovie.map(props => <ReviewItem key={props.id} {...props} />)\n          )}\n        </StyledReviewList>\n      )}\n    </div>\n  );\n};\n\nexport default Review;\n"],"names":["StyledReviewAuthor","styled","StyledReviewItem","author","content","StyledReviewList","Error","lazy","useState","reviewMovie","setreviewMovie","isLoading","setIsLoading","error","setError","movieId","useRef","useParams","current","useEffect","fetchData","api","res","data","results","message","Loading","length","map","props","id"],"sourceRoot":""}